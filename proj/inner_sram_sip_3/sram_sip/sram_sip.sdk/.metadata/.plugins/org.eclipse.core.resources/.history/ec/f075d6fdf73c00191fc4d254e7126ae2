#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xil_io.h"
#include "xparameters.h"
#include "sram_control.h"
#include "sram_ctrl_driver.h"

#define CTRL_ID XPAR_SRAM_CONTROL_0_DEVICE_ID
#define CTRL_BASE XPAR_SRAM_CONTROL_0_S00_AXI_BASEADDR
//for write
#define STA_ADDR_OFFSET SRAM_CONTROL_S00_AXI_SLV_REG0_OFFSET
#define TIM_CFG_OFFSET SRAM_CONTROL_S00_AXI_SLV_REG1_OFFSET
#define OP_CFG_OFFSET SRAM_CONTROL_S00_AXI_SLV_REG2_OFFSET
#define SEND_OFFSET SRAM_CONTROL_S00_AXI_SLV_REG3_OFFSET
#define ENABLE_OFFSET SRAM_CONTROL_S00_AXI_SLV_REG4_OFFSET

//for read
#define OUTP_ADDR_OFFSET SRAM_CONTROL_S00_AXI_SLV_REG5_OFFSET
#define OUTP_DATA_OFFSET SRAM_CONTROL_S00_AXI_SLV_REG6_OFFSET
#define STATUS_OFFSET SRAM_CONTROL_S00_AXI_SLV_REG7_OFFSET

#define DISENA 0x0
#define ENA 0x1
#define READ 0x1<<1
#define WRITE 0x0<<1

#define DELAY     1000000
#define ADDR_RANGE 0x3ff
#define DATA_RANGE 0xff
#define IDLE 0x2



void test_driver()
{
	print("watch the initial value\n\r");
	read(0x0);
	read(0x1);
	read(0x3fe);
	read(0x3ff);
	print("test write one and edge addr\n\r");
	write_one(0x0,0x5a);
	read(0x0);
	write_one(0x1,0xa5);
	read(0x1);
	write_one(0x3fe,0xaa);
	read(0x3fe);
	write_one(0x3ff,0x55);
	read(0x3ff);
	print("test write all\n\r");
	write_all(0x11);
	read(0x0);
	read(0x1);
	read(0x300);
	read(0x3fe);
	read(0x3ff);

	print("test write cfg\n\r");
	print("3 inc ncyc");
	write_all(0x0);
	write_cfg(0xa,0x5a,2,0,0);//3 inc ncyc
	read(0x9);
	read(0xa);
	read(0xb);
	read(0xc);
	read(0xd);
	print("3 dec ncyc");
	write_all(0x0);
	write_cfg(0x6,0xa5,2,1,0);//3 dec ncyc
	read(0x7);
	read(0x6);
	read(0x5);
	read(0x4);
	read(0x3);
	print("4 inc cyc");
	write_all(0x0);
	write_cfg(0x3fe,0xaa,3,0,1);//4 inc cyc
	read(0x3fd);
	read(0x3fe);
	read(0x3ff);
	read(0x0);
	read(0x1);
	read(0x2);
	print("4 dec cyc");
	write_all(0x0);
	write_cfg(0x1,0xaa,3,1,1);//4 dec cyc
	read(0x2);
	read(0x1);
	read(0x0);
	read(0x3ff);
	read(0x3fe);
	read(0x3fd);
	print("test all\n\r");
	return;
}



